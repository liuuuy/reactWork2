{"version":3,"sources":["pages/ReactHead/Header.js","pages/ReactHead/Home.js","router.config.js","pages/ReactHead/Doc.js","pages/ReactHead/Core.js","pages/ReactHead/Guide.js","pages/ReactHead/Api.js","pages/ReactHead/Hooks.js","pages/ReactHead/Tuto.js","pages/ReactHead/Blog.js","pages/ReactHead/Comm.js","pages/ReactHead/Login.js","Appdemo01.js","index.js"],"names":["Header","activeClassName","exact","to","Home","props","style","textAlign","onClick","history","push","routes","path","component","withRouter","className","map","route","i","RouteWithSubRoutes","key","pri","localStorage","setItem","replace","location","state","PrivateRoute","Com","rest","render","getItem","pathname","Appdemo01","ReactDOM","document","getElementById"],"mappings":"+OAkBeA,G,MAdA,WACX,OACI,gCACI,6BACI,kBAAC,IAAD,CAASC,gBAAgB,SAASC,OAAK,EAACC,GAAG,KAA3C,SACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,QAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,oBCODC,EAjBF,SAACC,GACV,OACI,yBAAKC,MAAO,CAACC,UAAU,WACnB,qCACA,uGACA,6BACI,4BAAQC,QACJ,kBAAIH,EAAMI,QAAQC,KAAK,UAD3B,4BAGA,4BAAQF,QACJ,kBAAIH,EAAMI,QAAQC,KAAK,WAD3B,+BCmDDC,G,MAhDA,CACX,CACIC,KAAK,IACLV,OAAM,EACNW,UAAUT,GAEd,CACIQ,KAAK,OACLC,UCSOC,aAxBH,SAACT,GACX,OACE,yBAAKU,UAAU,OAEb,yBAAKA,UAAU,WACb,kBAAC,IAAD,KACGV,EAAMM,OAAOK,KAAI,SAACC,EAAOC,GAAR,OAChB,kBAACC,EAAD,eAAoBC,IAAKF,GAAOD,SAKtC,4BACE,4BAAI,kBAAC,IAAD,CAASd,GAAG,aAAZ,6BACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,6BACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,YAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,eDAJkB,KAAI,EACJV,OAAO,CACH,CACIC,KAAK,YACLC,UEzBH,WACT,OACI,6BACE,uCFwBE,CACID,KAAK,aACLC,UG7BF,WACV,OACI,6BACI,wCH4BA,CACID,KAAK,WACLC,UIjCJ,WACR,OACI,6BACI,sCJgCA,CACID,KAAK,aACLC,UKrCF,WACV,OACI,6BACI,0CLsCR,CACID,KAAK,QACLC,UM3CK,WACT,OACI,6BACI,sCNyCJQ,KAAI,GAER,CACIT,KAAK,QACLC,UOhDK,WACT,OACI,6BACI,uCP+CR,CACID,KAAK,QACLC,UQpDK,WACT,OACI,6BACI,uCRmDR,CACID,KAAK,SACLC,USxDM,SAACR,GAOX,OACI,6BACI,4BAAQG,QARJ,WACRc,aAAaC,QAAQ,WAAW,OAGhClB,EAAMI,QAAQe,QAAQnB,EAAMoB,SAASC,SAIjC,qBCLZ,SAASC,EAAT,GAAoD,IAAjBC,EAAgB,EAA3Bf,UAAmBgB,EAAQ,6BAClD,OACC,kBAAC,IAAD,iBACKA,EADL,CAECC,OAAQ,gBAAGL,EAAH,EAAGA,SAAH,OACPH,aAAaS,QAAQ,YAClB,kBAACH,EAAQC,GAEV,kBAAC,IAAD,CACC1B,GAAI,CACH6B,SAAU,SACVN,MAAOD,SASf,SAASN,EAAmBF,GAG3B,OAAIA,EAAMI,IAEF,kBAACM,EAAD,eAAchB,OAAQM,EAAMN,QAAYM,IAExC,kBAAC,IAAD,CACNL,KAAMD,EAAOC,KACbkB,OAAQ,SAAAzB,GAAK,OAEZ,kBAACY,EAAMJ,UAAP,iBAAqBR,EAArB,CAA4BM,OAAQM,EAAMN,aAU9C,IAAMsB,EAAY,WACjB,OAAQ,kBAAC,IAAD,KACP,kBAAC,EAAD,MACA,kBAAC,IAAD,KACEtB,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACX,kBAACC,EAAD,eAAoBC,IAAKF,GAAOD,UChDpCiB,IAASJ,OACL,kBAAC,EAAD,MACFK,SAASC,eAAe,W","file":"static/js/main.8bf83a3a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h2>React</h2>\r\n            <p>用于构建用户界面的 JavaScript 库</p>\r\n            <div>\r\n                <button onClick={\r\n                    ()=>props.history.push('/doc')\r\n                }>快速开始</button>\r\n                <button onClick={\r\n                    ()=>props.history.push('/tuto')\r\n                }>入门教程</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import Home from './pages/ReactHead/Home';\r\nimport Doc from './pages/ReactHead/Doc';\r\nimport Tuto from './pages/ReactHead/Tuto';\r\nimport Blog from './pages/ReactHead/Blog';\r\nimport Comm from './pages/ReactHead/Comm';\r\nimport Login from './pages/ReactHead/Login';\r\nimport Hooks from './pages/ReactHead/Hooks';\r\nimport Api from './pages/ReactHead/Api';\r\nimport Core from './pages/ReactHead/Core';\r\nimport Guide from './pages/ReactHead/Guide';\r\n\r\n\r\n\r\n//路由配置  数组\r\nconst routes = [\r\n    {\r\n        path:'/',\r\n        exact:true,\r\n        component:Home,\r\n    },\r\n    {\r\n        path:'/doc',\r\n        component:Doc,\r\n        pri:true,\r\n        routes:[\r\n            {\r\n                path:'/doc/core',\r\n                component:Core\r\n            },\r\n            {\r\n                path:'/doc/guide',\r\n                component:Guide\r\n            },\r\n            {\r\n                path:'/doc/api',\r\n                component:Api\r\n            },\r\n            {\r\n                path:'/doc/hooks',\r\n                component:Hooks\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path:'/tuto',\r\n        component:Tuto,\r\n        pri:true\r\n    },\r\n    {\r\n        path:'/blog',\r\n        component:Blog, \r\n    },\r\n    {\r\n        path:'/comm',\r\n        component:Comm,  \r\n    },\r\n    {\r\n        path:'/login',\r\n        component:Login,\r\n    },\r\n\r\n]\r\nexport default routes;","import React from 'react'\r\nimport { NavLink, withRouter, Switch } from 'react-router-dom'\r\nimport './doc.css'\r\nimport { RouteWithSubRoutes } from '../../Appdemo01'\r\n\r\n\r\n\r\nconst Doc = (props) => {\r\n  return (\r\n    <div className='doc'>\r\n\r\n      <div className=\"content\">\r\n        <Switch>\r\n          {props.routes.map((route, i) => (\r\n            <RouteWithSubRoutes key={i} {...route} />\r\n          ))}\r\n        </Switch>\r\n\r\n      </div>\r\n      <ol>\r\n        <li><NavLink to='/doc/core'>核心概念</NavLink></li>\r\n        <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\r\n        <li><NavLink to='/doc/api'>API</NavLink></li>\r\n        <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\r\n      </ol>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default withRouter(Doc);","import React from 'react'\r\n\r\nconst Core = () => {\r\n    return (\r\n        <div>\r\n          <h2>Core</h2>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Core\r\n","import React from 'react'\r\n\r\nconst Guide = () => {\r\n    return (\r\n        <div>\r\n            <h2>Guide</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Guide\r\n","import React from 'react'\r\n\r\nconst Api = () => {\r\n    return (\r\n        <div>\r\n            <h2>Api</h2>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Api","import React from 'react'\r\n\r\nconst Hooks = () => {\r\n    return (\r\n        <div>\r\n            <h2>Hooks</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hooks\r\n","import React from 'react'\r\n\r\nconst Tuto = () => {\r\n    return (\r\n        <div>\r\n            <h3>\r\n            Tuto\r\n            </h3>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuto","import React from 'react'\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <div>\r\n            <h3>Blog</h3>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog;","import React from 'react'\r\n\r\nconst Comm = () => {\r\n    return (\r\n        <div>\r\n            <h3>Comm</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comm","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n    const login=()=>{\r\n        localStorage.setItem('userinfo','tom');\r\n        //登陆后返回的时候返回到你刚才在的那个页面\r\n        //如果是push的话点击登录该页面不变化还是呈现让你登陆状态\r\n        props.history.replace(props.location.state)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\r\nimport Header from './pages/ReactHead/Header';\r\nimport routes from './router.config';\r\n\r\n\r\nfunction PrivateRoute({ component: Com, ...rest }) {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={({ location }) =>\r\n\t\t\t\tlocalStorage.getItem('userinfo')\r\n\t\t\t\t\t? <Com {...rest} />\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\tpathname: \"/login\",\r\n\t\t\t\t\t\t\t\tstate: location\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction RouteWithSubRoutes(route) {\r\n\r\n\r\n\tif (route.pri) {\r\n\r\n\t\treturn <PrivateRoute routes={route.routes} {...route} />\r\n\t} else {\r\n\t\treturn <Route\r\n\t\t\tpath={routes.path}\r\n\t\t\trender={props => (\r\n\t\t\t\t// pass the sub-routes down to keep nesting\r\n\t\t\t\t<route.component {...props} routes={route.routes} />\r\n\t\t\t)} />\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst Appdemo01 = () => {\r\n\treturn (<Router>\r\n\t\t<Header />\r\n\t\t<Switch>\r\n\t\t\t{routes.map((route, i) => (\r\n\t\t\t\t<RouteWithSubRoutes key={i} {...route} />\r\n\t\t\t))}\r\n\r\n\t\t</Switch>\r\n\t</Router>)\r\n}\r\n\r\nexport { Appdemo01, RouteWithSubRoutes };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Appdemo01} from './Appdemo01';\r\n\r\nReactDOM.render( \r\n    <Appdemo01/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n // <TodoList/>,\r\n  //App01是路由这节课新建立的\r\n\r\n\r\n\r\n// import {Home} from './pages/Home';\r\n// import Control from './components/Control';\r\n//import Buttons from './components/Buttons';\r\n// import Demo01 from './pages/Demo01';\r\n// import App from './pages/App';\r\n// import Hoc,{ Detail } from './pages/Hoc';\r\n// import Hook from './pages/Hook';\r\n// import Context from './pages/Context';\r\n\r\n// console.log(Context);\r\n\r\n// ReactDOM.render(\r\n//   // <div><Hoc/><Detail/></div>,\r\n//   <Context.Provider value='123'>\r\n//   <Hook/>\r\n//   document.getElementById('root')\r\n// );\r\n\r\n\r\n\r\n\r\n/* // ReactDOM.render(\r\n//   // ele,\r\n//   // <App title='abc' id=\"app\"/>,\r\n//   // <Demo/>,\r\n//   // <div/>,\r\n//   //<Home data='abc'/>,\r\n//   // <Demo01 name='lily'/>,\r\n//   <App/>,\r\n//   // <Control/>,\r\n//   document.getElementById('root')\r\n// );\r\n//import $ from 'jquery';\r\n// import $ from 'jquery';\r\n// console.log($);\r\n//ctrl+shift+l选中所有相同单词\r\n//ctrl+shift+左右键  选中光标左边或者右边单词\r\n//ctrl+d 删除整行\r\n// alt shift + 上下键   复制一行\r\n// alt + 上下键         移动一行\r\n// let List = (props)=>{\r\n//   return <ul> */\r\n/* </Context.Provider>//     { */\r\n/* //       props.data.map(\r\n//         (item)=><li key={item.id}>{item.title}</li>\r\n//         )\r\n//     }\r\n//   </ul>\r\n// } */\r\n\r\n/* // const Buttons =()=>{ */\r\n/* //   // const btns=[1,2,3,4,5];\r\n//   const handleClick = (num)=>{ */\r\n/* //     //第一个参数，事件对象\r\n//     console.log(num);\r\n//   }\r\n// //   return <div>\r\n//     { */\r\n/* //       // btns.map((item)=>(\r\n//       // <button */\r\n/* //       //  key={item}\r\n//       //  onClick={()=>handleClick(item)}\r\n//       //  >\r\n//       //    {item}\r\n//       // </button> */\r\n/* //       // ))\r\n//     }\r\n//   </div>\r\n// } */\r\n\r\n\r\n/* // class Home extends React.Component{//声明类组件 */\r\n/* //   constructor(){\r\n//     super();\r\n//     //super(props);在构造函数中拿属性时加参数，大部分时候不写\r\n//     this.state={\r\n//       data:[]\r\n//     }\r\n//   }\r\n    \r\n//     //在render之后执行，该拿到setState一更新后render重新执行一次\r\n//     componentDidMount(){\r\n//       fetch('https://cnodejs.org/api/v1/topics')\r\n//       .then(res=>res.json())\r\n//       .then(({data})=>{\r\n//        this.setState({data})\r\n//       })\r\n//    }\r\n\r\n//   //  handleClick=()=>{//类中点击事件  默认不会绑定this(可以bind绑定)\r\n//   //    console.log(this);\r\n//   //  }\r\n// //在render完全更新好了后会有componentDidUpdate()\r\n    \r\n//     // setTimeout(()=>{\r\n//     //   this.setState({data:[5,6,7,8]})\r\n//     // },1000)\r\n//     // }\r\n//   getData=(page)=>{\r\n//         fetch('https://cnodejs.org/api/v1/topics?page='+page)\r\n//         .then(res=>res.json())\r\n//         .then(({data})=>{\r\n//          this.setState({data})\r\n//         })\r\n//       }\r\n//       //console.log(page);\r\n    \r\n  \r\n//   render(){//类组件唯一必须的方法\r\n//     const{data}=this.state;\r\n//     // return <ul>\r\n//     //   {\r\n//     //       data.map(\r\n//     //       (item)=><li>{item.title}</li>\r\n//     //     )\r\n//     //   }\r\n//     // </ul>\r\n//     const btns=[1,2,3,4,5];\r\n//     return <div>\r\n      \r\n//       {/* <button onClick={this.handleClick}>click</button>\r\n\r\n//       <Buttons /> */\r\n/* //</Context.Provider>//         btns.map((item)=>( */\r\n//         <button\r\n//         key={item}\r\n//         onClick={()=>this.getData(item)}>\r\n//           {item}\r\n//         </button> */\r\n/* //       ))\r\n//       }\r\n      \r\n//       <List data = {data}/>\r\n//     </div>\r\n   \r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//组件声明  (分为函数组件和类组件)\r\n//函数组件（常用于展示，功能不足）\r\n//功能：UI（展示）组件，木偶组件（传入什么就展示什么）\r\n// function App(props){//参数是一个对象\r\n//   const{title,id}=props;\r\n//   return <div>\r\n//     <h1>app组件内容</h1>\r\n//     <div>{title}</div>\r\n//     <div>{id}</div>\r\n//   </div>\r\n// }\r\n\r\n// //智能组件\r\n// class Demo extends React.Component{//Component是组件意思\r\n//   constructor(){\r\n//     super();\r\n//     //声明状态\r\n//     this.state = {\r\n//       //name:'tom'\r\n//       name:new Date().toLocaleString(),\r\n//     }\r\n//     //改状态\r\n//     setTimeout(()=>{\r\n//       //this.setState({name:\"jery\"})\r\n//       this.setState({name:new Date().toLocaleString()});\r\n//     },1000)\r\n//   }\r\n//   render(){\r\n//     // return<ul>                    ////后续代码没跟上的\r\n//     //   {\r\n//     //     this state.data.map(\r\n//     //       (item)=><li>{item}</li>\r\n//     //     )\r\n//     //   }\r\n//    // </ul>\r\n//     return <div>\r\n//       <div>name:{this.state.name}</div>\r\n//       <App title={this.state.name} id='app'/>\r\n//       {/* <App title='任意值' id='app'/>\r\n//       <App title='任意值' id='app'/>\r\n //     </div> */\r\n//   }\r\n// }\r\n\r\n// ReactDOM.render(\r\n//   //ele,\r\n//   //<App title='任意值' id='app'/>,//函数组件\r\n//   <Demo title='任意值' id='app'/>,//类组件\r\n//   document.getElementById('root')\r\n// ); */}\r\n\r\n// // let ele =  <h1 id=\"title\" className=\"tit\">\r\n// //   {/* <div id=\"div1\">hello</div>\r\n// //    react\r\n// //    <div>hello</div>\r\n// //    <div>{['hello','world']}</div>*/}\r\n// //    <div>当前时间</div>\r\n// //    {new DataCue().toLocalestring()}\r\n// // </h1>;\r\n\r\n\r\n// //let ele = React.createElement(\r\n//  // \"h1\",\r\n//  // {id:\"title\"},\r\n//  // React.createElement(\"div\",{id:\"div1\"},\"hello\")\r\n//  // )\r\n\r\n\r\n//  //将JSX对象渲染到\r\n// // let ReactDOM ={\r\n// //   render(eleObj,container){\r\n// //     //解构\r\n// //     const {type,props}=eleObj;\r\n// //     //创建第一层节点\r\n// //    let ele = document.createElement(type);\r\n// //    //遍历属性对象将属性添加到第一层节点对象上\r\n// //     for(const prop in props){\r\n// //       if(prop == \"children\"){\r\n// //         if(typeof props.children == 'string'){\r\n// //           const txtNode = document.createTextNode(props.children);\r\n// //           ele.appendChild(txtNode);\r\n// //           break;\r\n// //         }\r\n// //         //将第一层节点对象的子元素添加进去\r\n// //         props.children.forEach(child=>{//至于一个对象child外面的括号可以不要\r\n// //           if(typeof child == \"string\"){\r\n// //             const txtNode = document.createTextNode(child);\r\n// //             ele.appendChild(txtNode);\r\n// //           }else{\r\n// //             ReactDOM.render(child,ele);\r\n// //           }\r\n// //         })\r\n// //       }else{\r\n// //         ele[prop]=props[prop];\r\n// //       }\r\n\r\n// //     }\r\n// //     //将第一层DOM节点添加到container中\r\n// //     container.appendChild(ele);\r\n\r\n// //   }\r\n// // }\r\n\r\n\r\n// /*\r\n// 1.原生JS，DOM操作（JQ）\r\n// 2.React:开发效率高，性能高（不卡死），\r\n// 3.环境搭建，创建一个项目，运行\r\n// 4.JSX语法\r\n\r\n\r\n"],"sourceRoot":""}